// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(uuid())
  phone             String              @unique
  password          String
  tempPassword      String?
  firstName         String
  lastName          String
  email             String              @unique
  status            UserStatus          @default(PENDING)
  roles             Role[]              @relation("UserRoles")
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  bids              Bid[]
  auctioneerProfile AuctioneerProfile?  @relation(fields: [auctioneerProfileId], references: [id])
  auctioneerProfileId String?            @unique
  paidParticipation Boolean             @default(false)
  paidDeposit       Boolean             @default(false)
  paymentMethod     PaymentMethod?
  receiptUrl        String?
}

model Role {
  id    String @id @default(uuid())
  name  RoleName @unique
  users User[]   @relation("UserRoles")
}

model AuctioneerProfile {
  id          String        @id @default(uuid())
  companyName String
  address     String
  user        User?
  auctionItems AuctionItem[]
  tempPassword String?
}

model Category {
  id          String        @id @default(uuid())
  name        String        @unique
  auctionItems AuctionItem[]
}

model AuctionItem {
  id                String          @id @default(uuid())
  name              String
  description       String
  startingPrice     Float
  startDate         DateTime
  endDate           DateTime
  type              AuctionItemType
  minIncrement      Float?
  maxAllowedValue   Float?
  participationFee  Float?
  securityDeposit   Float?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  category          Category        @relation(fields: [categoryId], references: [id])
  categoryId        String
  auctioneer        AuctioneerProfile @relation(fields: [auctioneerId], references: [id])
  auctioneerId      String
  images            Image[]
  bids              Bid[]
}

model Image {
  id            String      @id @default(uuid())
  url           String
  hint          String?
  auctionItem   AuctionItem @relation(fields: [auctionItemId], references: [id], onDelete: Cascade)
  auctionItemId String
}

model Bid {
  id            String      @id @default(uuid())
  amount        Float
  createdAt     DateTime    @default(now())
  bidder        User        @relation(fields: [bidderId], references: [id])
  bidderId      String
  auctionItem   AuctionItem @relation(fields: [auctionItemId], references: [id], onDelete: Cascade)
  auctionItemId String
}

enum RoleName {
  SUPER_ADMIN
  AUCTIONEER
  BIDDER
}

enum UserStatus {
  PENDING
  APPROVED
  BLOCKED
}

enum AuctionItemType {
  LIVE
  SEALED
}

enum PaymentMethod {
  DIRECT
  RECEIPT
}
