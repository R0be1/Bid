
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RoleName {
  SUPER_ADMIN
  AUCTIONEER
  BIDDER
}

enum UserStatus {
  PENDING
  APPROVED
  BLOCKED
}

model User {
  id                String      @id @default(cuid())
  phone             String      @unique
  password          String
  tempPassword      String?
  firstName         String
  lastName          String
  email             String      @unique
  status            UserStatus  @default(PENDING)
  roles             Role[]      @relation("UserRoles")
  bids              Bid[]
  auctioneerProfile AuctioneerProfile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id    String @id @default(cuid())
  name  RoleName @unique
  users User[]   @relation("UserRoles")
}

model AuctioneerProfile {
  id           String @id @default(cuid())
  userId       String @unique
  user         User   @relation(fields: [userId], references: [id])
  companyName  String
  address      String
  tempPassword String?
  auctionItems AuctionItem[]
}

model Category {
  id   String @id @default(cuid())
  name String @unique
  items AuctionItem[]
}

model AuctionItem {
  id                String    @id @default(cuid())
  name              String
  description       String
  imageUrls         String[]
  imageHints        String[]
  categoryId        String
  category          Category  @relation(fields: [categoryId], references: [id])
  auctioneerId      String
  auctioneer        AuctioneerProfile @relation(fields: [auctioneerId], references: [id])
  type              AuctionType
  startDate         DateTime
  endDate           DateTime
  startingPrice     Float
  currentBid        Float?
  highBidder        String?
  participationFee  Float?
  securityDeposit   Float?
  minIncrement      Float?
  maxAllowedValue   Float?
  bids              Bid[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bid {
  id            String      @id @default(cuid())
  amount        Float
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  auctionItemId String
  auctionItem   AuctionItem @relation(fields: [auctionItemId], references: [id])

  createdAt DateTime @default(now())
}

enum RoleName {
  SUPER_ADMIN
  AUCTIONEER
  BIDDER
}

enum UserStatus {
  PENDING
  APPROVED
  BLOCKED
}

enum AuctionType {
  LIVE
  SEALED
}
